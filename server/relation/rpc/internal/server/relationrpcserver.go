// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"GopherTok/server/relation/rpc/internal/logic"
	"GopherTok/server/relation/rpc/internal/svc"
	"GopherTok/server/relation/rpc/pb"
)

type RelationRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRelationRpcServer
}

func NewRelationRpcServer(svcCtx *svc.ServiceContext) *RelationRpcServer {
	return &RelationRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationRpcServer) AddFollow(ctx context.Context, in *pb.AddFollowReq) (*pb.AddFollowResp, error) {
	l := logic.NewAddFollowLogic(ctx, s.svcCtx)
	return l.AddFollow(in)
}

func (s *RelationRpcServer) DeleteFollow(ctx context.Context, in *pb.DeleteFollowReq) (*pb.DeleteFollowResp, error) {
	l := logic.NewDeleteFollowLogic(ctx, s.svcCtx)
	return l.DeleteFollow(in)
}

func (s *RelationRpcServer) GetFollowList(ctx context.Context, in *pb.GetFollowListReq) (*pb.GetFollowListResp, error) {
	l := logic.NewGetFollowListLogic(ctx, s.svcCtx)
	return l.GetFollowList(in)
}

func (s *RelationRpcServer) GetFollowerList(ctx context.Context, in *pb.GetFollowerReq) (*pb.GetFollowerResp, error) {
	l := logic.NewGetFollowerListLogic(ctx, s.svcCtx)
	return l.GetFollowerList(in)
}

func (s *RelationRpcServer) GetFriendList(ctx context.Context, in *pb.GetFriendListReq) (*pb.GetFriendListResp, error) {
	l := logic.NewGetFriendListLogic(ctx, s.svcCtx)
	return l.GetFriendList(in)
}

func (s *RelationRpcServer) GetFollowerCount(ctx context.Context, in *pb.GetFollowerCountReq) (*pb.GetFollowerCountResp, error) {
	l := logic.NewGetFollowerCountLogic(ctx, s.svcCtx)
	return l.GetFollowerCount(in)
}

func (s *RelationRpcServer) GetFollowCount(ctx context.Context, in *pb.GetFollowCountReq) (*pb.GetFollowCountResp, error) {
	l := logic.NewGetFollowCountLogic(ctx, s.svcCtx)
	return l.GetFollowCount(in)
}

func (s *RelationRpcServer) GetFriendCount(ctx context.Context, in *pb.GetFriendCountReq) (*pb.GetFriendCountResp, error) {
	l := logic.NewGetFriendCountLogic(ctx, s.svcCtx)
	return l.GetFriendCount(in)
}

func (s *RelationRpcServer) CheckIsFollow(ctx context.Context, in *pb.CheckIsFollowReq) (*pb.CheckIsFollowResp, error) {
	l := logic.NewCheckIsFollowLogic(ctx, s.svcCtx)
	return l.CheckIsFollow(in)
}
