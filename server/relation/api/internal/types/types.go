// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	Id              int64  `json:"id"`
	Name            string `json:"name"`
	FollowCount     int64  `json:"follow_count"`
	FollowerCount   int64  `json:"follower_count"`
	IsFollow        bool   `json:"is_follow"`
	Avatar          string `json:"avatar"`
	BackgroundImage string `json:"background_image"`
	Signature       string `json:"signature"`
	TotalFavourited string `json:"total_favourited"`
	WorkCount       int64  `json:"work_count"`
	FavouriteCount  int64  `json:"favourite_count"`
}

type Follow struct {
	Id         int64 `json:"id"`
	UserId     int64 `json:"user_id"`
	FollowerId int64 `json:"follower_id"`
	IsFollow   bool  `json:"is_follow"`
}

type FollowReq struct {
	Token    string `form:"token"`
	ToUserId int64  `form:"to_user_id"`
}

type FollowRes struct {
	StatusCode string `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type FollowListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FollowListRes struct {
	StatusCode string  `json:"status_code"`
	StatusMsg  string  `json:"status_msg"`
	UserList   *[]User `json:"user_list"`
}

type FollowerListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FollowerListRes struct {
	StatusCode string  `json:"status_code"`
	StatusMsg  string  `json:"status_msg"`
	UserList   *[]User `json:"user_list"`
}

type FriendListReq struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FriendListRes struct {
	StatusCode string  `json:"status_code"`
	StatusMsg  string  `json:"status_msg"`
	UserList   *[]User `json:"user_list"`
}
