// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package server

import (
	"context"

	"GopherTok/server/chat/rpc/internal/logic"
	"GopherTok/server/chat/rpc/internal/svc"
	"GopherTok/server/chat/rpc/pb"
)

type ChatRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedChatRpcServer
}

func NewChatRpcServer(svcCtx *svc.ServiceContext) *ChatRpcServer {
	return &ChatRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatRpcServer) MessageAction(ctx context.Context, in *pb.MessageActionRequest) (*pb.MessageActionResponse, error) {
	l := logic.NewMessageActionLogic(ctx, s.svcCtx)
	return l.MessageAction(in)
}

func (s *ChatRpcServer) MessageChat(ctx context.Context, in *pb.MessageChatRequest) (*pb.MessageChatResponse, error) {
	l := logic.NewMessageChatLogic(ctx, s.svcCtx)
	return l.MessageChat(in)
}

func (s *ChatRpcServer) MessageChatLast(ctx context.Context, in *pb.MessageChatLastRequest) (*pb.MessageChatLastResponse, error) {
	l := logic.NewMessageChatLastLogic(ctx, s.svcCtx)
	return l.MessageChatLast(in)
}
